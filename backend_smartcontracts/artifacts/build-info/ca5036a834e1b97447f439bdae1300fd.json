{
	"id": "ca5036a834e1b97447f439bdae1300fd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"WhitelistAuctionController.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0;\r\n\r\n/// @title Whitelist auction controller contract\r\n/// @author Ruben Frisch (Óbuda University - John von Neumann Faculty of Informatics, Business Informatics MSc)\r\n/// @notice This contract enables whitelist (closed) auctions\r\n/// @dev This contract enables whitelist (closed) auctions\r\nabstract contract WhitelistAuctionController {\r\n    \r\n     // <<< STATE VARIABLES >>>\r\n    /// @dev Indicates whether an auction is a whitelist auction or not\r\n    mapping(bytes32 => bool) private _closedAuction;\r\n\r\n    /// @dev Indicates whether an address is whitelisted or not in the respective whitelist auction\r\n    mapping(bytes32 => mapping(address => bool)) private _whitelistedParticipants;\r\n    \r\n     // <<< EVENTS >>>\r\n    /// @dev Event for logging the configuration of an auction as closed (whitelisted)\r\n    /// @notice Event for logging the configuration of an auction as closed (whitelisted)\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction that was configured as closed (whitelisted)\r\n    event AuctionConfiguredAsClosed(bytes32 indexed auctionID_);\r\n\r\n    /// @dev Event for logging the whitelisting of participants\r\n    /// @notice Event for logging the whitelisting of participants\r\n    /// @param auctionID_ The 256 bit hash identifier of the closed (whitelisted) auction that the whitelisted participants has been registered to\r\n    event AddedWhitelistedParticipants(bytes32 indexed auctionID_);\r\n\r\n     // <<< CONFIGURATION FUNCTIONS >>>\r\n    /// @dev Determines whether an auction is closed (whitelisted) or not, accesses the '_closedAuction' storage variable\r\n    /// @notice Determines whether an auction is closed (whitelisted) or not\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @return Boolean flag indicating whether the auction is closed (true) or not (false)\r\n    function closedAuction(bytes32 auctionID_) public view returns (bool) {\r\n        return _closedAuction[auctionID_];\r\n    }\r\n\r\n    /// @dev Sets an auction to closed (whitelisted)\r\n    /// @notice Sets an auction to closed (whitelisted)\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    function _configureAsClosedAuction(bytes32 auctionID_) internal {\r\n        _closedAuction[auctionID_] = true;\r\n        emit AuctionConfiguredAsClosed(auctionID_);\r\n    }\r\n\r\n    /// @dev Configure an auction as closed (whitelisted)\r\n    /// @notice Configure an auction as closed (whitelisted)\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @return Returns true if the auction has been configured successfully as a closed (whitelisted) auction\r\n    /// @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\r\n    /// @custom:virtual The storage modification should be executed by the internal function '_configureAsClosedAuction'\r\n    function configureAsClosedAuction(bytes32 auctionID_) external virtual returns (bool);\r\n\r\n     // <<< CORE WHITELISTING FUNCTIONS >>>\r\n    /// @dev Checks whether an address is whitelisted or not at a certain closed (whitelisted) auction\r\n    /// @notice Checks whether an address is whitelisted or not at a certain closed (whitelisted) auction\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @param participant_ The address of the participant we want to check whether it is whitelisted or not\r\n    /// @return Boolean flag indicating whether the address is whitelisted (true) or not (false)\r\n    function isWhitelisted(bytes32 auctionID_, address participant_) public view returns (bool) {\r\n        return _whitelistedParticipants[auctionID_][participant_];\r\n    }\r\n\r\n    /// @dev Whitelists an array of addresses to be eligible for participation in a closed (whitelisted) auction\r\n    /// @notice Whitelists a group of users to be eligible for participation in a closed (whitelisted) auction\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @param participants_ The array of addresses to be whitelisted\r\n    function _whitelistParticipants(bytes32 auctionID_, address[] memory participants_) internal {\r\n        for(uint256 i = 0; i < participants_.length; i++ ) {\r\n            _whitelistedParticipants[auctionID_][participants_[i]] = true;\r\n        }\r\n        emit AddedWhitelistedParticipants(auctionID_);\r\n    }\r\n\r\n    /// @dev Whitelists an array of addresses to be eligible for participation in a closed (whitelisted) auction\r\n    /// @notice Whitelists a group of users to be eligible for participation in a closed (whitelisted) auction\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @param participants_ The array of addresses to be whitelisted\r\n    /// @return Returns true if the whitelisting of the passed addresses was successful\r\n    /// @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\r\n    /// @custom:virtual The storage modification should be done by the internal function '_whitelistParticipants'\r\n    function whitelistParticipants(bytes32 auctionID_, address[] memory participants_) external virtual returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"WhitelistAuctionController.sol": {
				"WhitelistAuctionController": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								}
							],
							"name": "AddedWhitelistedParticipants",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								}
							],
							"name": "AuctionConfiguredAsClosed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								}
							],
							"name": "closedAuction",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								}
							],
							"name": "configureAsClosedAuction",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "participant_",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								},
								{
									"internalType": "address[]",
									"name": "participants_",
									"type": "address[]"
								}
							],
							"name": "whitelistParticipants",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Ruben Frisch (Óbuda University - John von Neumann Faculty of Informatics, Business Informatics MSc)",
						"details": "This contract enables whitelist (closed) auctions",
						"events": {
							"AddedWhitelistedParticipants(bytes32)": {
								"details": "Event for logging the whitelisting of participants",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the closed (whitelisted) auction that the whitelisted participants has been registered to"
								}
							},
							"AuctionConfiguredAsClosed(bytes32)": {
								"details": "Event for logging the configuration of an auction as closed (whitelisted)",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction that was configured as closed (whitelisted)"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"closedAuction(bytes32)": {
								"details": "Determines whether an auction is closed (whitelisted) or not, accesses the '_closedAuction' storage variable",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction"
								},
								"returns": {
									"_0": "Boolean flag indicating whether the auction is closed (true) or not (false)"
								}
							},
							"configureAsClosedAuction(bytes32)": {
								"custom:virtual": "This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be executed by the internal function '_configureAsClosedAuction'",
								"details": "Configure an auction as closed (whitelisted)",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction"
								},
								"returns": {
									"_0": "Returns true if the auction has been configured successfully as a closed (whitelisted) auction"
								}
							},
							"isWhitelisted(bytes32,address)": {
								"details": "Checks whether an address is whitelisted or not at a certain closed (whitelisted) auction",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction",
									"participant_": "The address of the participant we want to check whether it is whitelisted or not"
								},
								"returns": {
									"_0": "Boolean flag indicating whether the address is whitelisted (true) or not (false)"
								}
							},
							"whitelistParticipants(bytes32,address[])": {
								"custom:virtual": "This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be done by the internal function '_whitelistParticipants'",
								"details": "Whitelists an array of addresses to be eligible for participation in a closed (whitelisted) auction",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction",
									"participants_": "The array of addresses to be whitelisted"
								},
								"returns": {
									"_0": "Returns true if the whitelisting of the passed addresses was successful"
								}
							}
						},
						"stateVariables": {
							"_closedAuction": {
								"details": "Indicates whether an auction is a whitelist auction or not"
							},
							"_whitelistedParticipants": {
								"details": "Indicates whether an address is whitelisted or not in the respective whitelist auction"
							}
						},
						"title": "Whitelist auction controller contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"closedAuction(bytes32)": "529f7ff1",
							"configureAsClosedAuction(bytes32)": "3a65477f",
							"isWhitelisted(bytes32,address)": "f4099811",
							"whitelistParticipants(bytes32,address[])": "553138d4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"}],\"name\":\"AddedWhitelistedParticipants\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"}],\"name\":\"AuctionConfiguredAsClosed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"}],\"name\":\"closedAuction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"}],\"name\":\"configureAsClosedAuction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"participant_\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"participants_\",\"type\":\"address[]\"}],\"name\":\"whitelistParticipants\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Ruben Frisch (\\u00d3buda University - John von Neumann Faculty of Informatics, Business Informatics MSc)\",\"details\":\"This contract enables whitelist (closed) auctions\",\"events\":{\"AddedWhitelistedParticipants(bytes32)\":{\"details\":\"Event for logging the whitelisting of participants\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the closed (whitelisted) auction that the whitelisted participants has been registered to\"}},\"AuctionConfiguredAsClosed(bytes32)\":{\"details\":\"Event for logging the configuration of an auction as closed (whitelisted)\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction that was configured as closed (whitelisted)\"}}},\"kind\":\"dev\",\"methods\":{\"closedAuction(bytes32)\":{\"details\":\"Determines whether an auction is closed (whitelisted) or not, accesses the '_closedAuction' storage variable\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\"},\"returns\":{\"_0\":\"Boolean flag indicating whether the auction is closed (true) or not (false)\"}},\"configureAsClosedAuction(bytes32)\":{\"custom:virtual\":\"This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be executed by the internal function '_configureAsClosedAuction'\",\"details\":\"Configure an auction as closed (whitelisted)\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\"},\"returns\":{\"_0\":\"Returns true if the auction has been configured successfully as a closed (whitelisted) auction\"}},\"isWhitelisted(bytes32,address)\":{\"details\":\"Checks whether an address is whitelisted or not at a certain closed (whitelisted) auction\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\",\"participant_\":\"The address of the participant we want to check whether it is whitelisted or not\"},\"returns\":{\"_0\":\"Boolean flag indicating whether the address is whitelisted (true) or not (false)\"}},\"whitelistParticipants(bytes32,address[])\":{\"custom:virtual\":\"This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be done by the internal function '_whitelistParticipants'\",\"details\":\"Whitelists an array of addresses to be eligible for participation in a closed (whitelisted) auction\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\",\"participants_\":\"The array of addresses to be whitelisted\"},\"returns\":{\"_0\":\"Returns true if the whitelisting of the passed addresses was successful\"}}},\"stateVariables\":{\"_closedAuction\":{\"details\":\"Indicates whether an auction is a whitelist auction or not\"},\"_whitelistedParticipants\":{\"details\":\"Indicates whether an address is whitelisted or not in the respective whitelist auction\"}},\"title\":\"Whitelist auction controller contract\",\"version\":1},\"userdoc\":{\"events\":{\"AddedWhitelistedParticipants(bytes32)\":{\"notice\":\"Event for logging the whitelisting of participants\"},\"AuctionConfiguredAsClosed(bytes32)\":{\"notice\":\"Event for logging the configuration of an auction as closed (whitelisted)\"}},\"kind\":\"user\",\"methods\":{\"closedAuction(bytes32)\":{\"notice\":\"Determines whether an auction is closed (whitelisted) or not\"},\"configureAsClosedAuction(bytes32)\":{\"notice\":\"Configure an auction as closed (whitelisted)\"},\"isWhitelisted(bytes32,address)\":{\"notice\":\"Checks whether an address is whitelisted or not at a certain closed (whitelisted) auction\"},\"whitelistParticipants(bytes32,address[])\":{\"notice\":\"Whitelists a group of users to be eligible for participation in a closed (whitelisted) auction\"}},\"notice\":\"This contract enables whitelist (closed) auctions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"WhitelistAuctionController.sol\":\"WhitelistAuctionController\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"WhitelistAuctionController.sol\":{\"keccak256\":\"0x6963d6cb498c79206f6e1f6770f68cc2249e853d5d4e805888d5a8b6951efaa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3feb2b467515e87ee821f654d921a935eee605121da2ae360615369f48edb87\",\"dweb:/ipfs/QmSuKmynDE28BWvRvJspav4QavYs9oHHJ66EHfsHpoCWqX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "WhitelistAuctionController.sol:WhitelistAuctionController",
								"label": "_closedAuction",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_bool)"
							},
							{
								"astId": 14,
								"contract": "WhitelistAuctionController.sol:WhitelistAuctionController",
								"label": "_whitelistedParticipants",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							}
						}
					},
					"userdoc": {
						"events": {
							"AddedWhitelistedParticipants(bytes32)": {
								"notice": "Event for logging the whitelisting of participants"
							},
							"AuctionConfiguredAsClosed(bytes32)": {
								"notice": "Event for logging the configuration of an auction as closed (whitelisted)"
							}
						},
						"kind": "user",
						"methods": {
							"closedAuction(bytes32)": {
								"notice": "Determines whether an auction is closed (whitelisted) or not"
							},
							"configureAsClosedAuction(bytes32)": {
								"notice": "Configure an auction as closed (whitelisted)"
							},
							"isWhitelisted(bytes32,address)": {
								"notice": "Checks whether an address is whitelisted or not at a certain closed (whitelisted) auction"
							},
							"whitelistParticipants(bytes32,address[])": {
								"notice": "Whitelists a group of users to be eligible for participation in a closed (whitelisted) auction"
							}
						},
						"notice": "This contract enables whitelist (closed) auctions",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"WhitelistAuctionController.sol": {
				"ast": {
					"absolutePath": "WhitelistAuctionController.sol",
					"exportedSymbols": {
						"WhitelistAuctionController": [
							128
						]
					},
					"id": 129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "WhitelistAuctionController",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:287:0",
								"text": "@title Whitelist auction controller contract\n @author Ruben Frisch (Óbuda University - John von Neumann Faculty of Informatics, Business Informatics MSc)\n @notice This contract enables whitelist (closed) auctions\n @dev This contract enables whitelist (closed) auctions"
							},
							"fullyImplemented": false,
							"id": 128,
							"linearizedBaseContracts": [
								128
							],
							"name": "WhitelistAuctionController",
							"nameLocation": "366:26:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "439:67:0",
										"text": "@dev Indicates whether an auction is a whitelist auction or not"
									},
									"id": 7,
									"mutability": "mutable",
									"name": "_closedAuction",
									"nameLocation": "545:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "512:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 6,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "520:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "512:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 5,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "531:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "568:95:0",
										"text": "@dev Indicates whether an address is whitelisted or not in the respective whitelist auction"
									},
									"id": 14,
									"mutability": "mutable",
									"name": "_whitelistedParticipants",
									"nameLocation": "722:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "669:77:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(bytes32 => mapping(address => bool))"
									},
									"typeName": {
										"id": 13,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 9,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "677:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "669:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(bytes32 => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 12,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 10,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "696:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "688:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 11,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "707:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "783:287:0",
										"text": "@dev Event for logging the configuration of an auction as closed (whitelisted)\n @notice Event for logging the configuration of an auction as closed (whitelisted)\n @param auctionID_ The 256 bit hash identifier of the auction that was configured as closed (whitelisted)"
									},
									"eventSelector": "52f0758bea1ac90bc036e9da083f2cec9b2ab24d6ae9faf7b06048f45f6d4574",
									"id": 19,
									"name": "AuctionConfiguredAsClosed",
									"nameLocation": "1082:25:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "1124:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "1108:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:28:0"
									},
									"src": "1076:60:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1144:275:0",
										"text": "@dev Event for logging the whitelisting of participants\n @notice Event for logging the whitelisting of participants\n @param auctionID_ The 256 bit hash identifier of the closed (whitelisted) auction that the whitelisted participants has been registered to"
									},
									"eventSelector": "b30540f764cd2a7396432457325f08f61f23bbe3d4c2cef382baf5f75af540d2",
									"id": 24,
									"name": "AddedWhitelistedParticipants",
									"nameLocation": "1431:28:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "1476:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1460:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 21,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:28:0"
									},
									"src": "1425:63:0"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1971:52:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 32,
														"name": "_closedAuction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1989:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
															"typeString": "mapping(bytes32 => bool)"
														}
													},
													"id": 34,
													"indexExpression": {
														"id": 33,
														"name": "auctionID_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2004:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1989:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 31,
												"id": 35,
												"nodeType": "Return",
												"src": "1982:33:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1537:358:0",
										"text": "@dev Determines whether an auction is closed (whitelisted) or not, accesses the '_closedAuction' storage variable\n @notice Determines whether an auction is closed (whitelisted) or not\n @param auctionID_ The 256 bit hash identifier of the auction\n @return Boolean flag indicating whether the auction is closed (true) or not (false)"
									},
									"functionSelector": "529f7ff1",
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closedAuction",
									"nameLocation": "1910:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "1932:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1924:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 26,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1923:20:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1965:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1965:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1964:6:0"
									},
									"scope": 128,
									"src": "1901:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2276:105:0",
										"statements": [
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 43,
															"name": "_closedAuction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2287:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 45,
														"indexExpression": {
															"id": 44,
															"name": "auctionID_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "2302:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2287:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2316:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2287:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "2287:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 50,
															"name": "auctionID_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "2362:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 49,
														"name": "AuctionConfiguredAsClosed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2336:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2336:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "EmitStatement",
												"src": "2331:42:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "2031:175:0",
										"text": "@dev Sets an auction to closed (whitelisted)\n @notice Sets an auction to closed (whitelisted)\n @param auctionID_ The 256 bit hash identifier of the auction"
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_configureAsClosedAuction",
									"nameLocation": "2221:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "2255:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2247:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 39,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:20:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2276:0:0"
									},
									"scope": 128,
									"src": "2212:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2389:576:0",
										"text": "@dev Configure an auction as closed (whitelisted)\n @notice Configure an auction as closed (whitelisted)\n @param auctionID_ The 256 bit hash identifier of the auction\n @return Returns true if the auction has been configured successfully as a closed (whitelisted) auction\n @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\n @custom:virtual The storage modification should be executed by the internal function '_configureAsClosedAuction'"
									},
									"functionSelector": "3a65477f",
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configureAsClosedAuction",
									"nameLocation": "2980:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "3013:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "3005:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 56,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3004:20:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "3051:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3051:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:6:0"
									},
									"scope": 128,
									"src": "2971:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "3691:76:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 72,
															"name": "_whitelistedParticipants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "3709:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(bytes32 => mapping(address => bool))"
															}
														},
														"id": 74,
														"indexExpression": {
															"id": 73,
															"name": "auctionID_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "3734:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3709:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "participant_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "3746:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3709:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 77,
												"nodeType": "Return",
												"src": "3702:57:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "3110:483:0",
										"text": "@dev Checks whether an address is whitelisted or not at a certain closed (whitelisted) auction\n @notice Checks whether an address is whitelisted or not at a certain closed (whitelisted) auction\n @param auctionID_ The 256 bit hash identifier of the auction\n @param participant_ The address of the participant we want to check whether it is whitelisted or not\n @return Boolean flag indicating whether the address is whitelisted (true) or not (false)"
									},
									"functionSelector": "f4099811",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelisted",
									"nameLocation": "3608:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "3630:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3622:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "participant_",
												"nameLocation": "3650:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3642:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3621:42:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3685:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3685:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3684:6:0"
									},
									"scope": 128,
									"src": "3599:168:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "4235:213:0",
										"statements": [
											{
												"body": {
													"id": 109,
													"nodeType": "Block",
													"src": "4297:88:0",
													"statements": [
														{
															"expression": {
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 99,
																			"name": "_whitelistedParticipants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "4312:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(bytes32 => mapping(address => bool))"
																			}
																		},
																		"id": 104,
																		"indexExpression": {
																			"id": 100,
																			"name": "auctionID_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 82,
																			"src": "4337:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4312:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 105,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 101,
																			"name": "participants_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 85,
																			"src": "4349:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 103,
																		"indexExpression": {
																			"id": 102,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 89,
																			"src": "4363:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4349:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4312:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4369:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4312:61:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 108,
															"nodeType": "ExpressionStatement",
															"src": "4312:61:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 92,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "4265:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 93,
															"name": "participants_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "4269:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4283:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4269:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4265:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 110,
												"initializationExpression": {
													"assignments": [
														89
													],
													"declarations": [
														{
															"constant": false,
															"id": 89,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4258:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 110,
															"src": "4250:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 88,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4250:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 91,
													"initialValue": {
														"hexValue": "30",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4262:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4250:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4291:3:0",
														"subExpression": {
															"id": 96,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "4291:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 98,
													"nodeType": "ExpressionStatement",
													"src": "4291:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4246:139:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 112,
															"name": "auctionID_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "4429:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 111,
														"name": "AddedWhitelistedParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "4400:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4400:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 114,
												"nodeType": "EmitStatement",
												"src": "4395:45:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3775:361:0",
										"text": "@dev Whitelists an array of addresses to be eligible for participation in a closed (whitelisted) auction\n @notice Whitelists a group of users to be eligible for participation in a closed (whitelisted) auction\n @param auctionID_ The 256 bit hash identifier of the auction\n @param participants_ The array of addresses to be whitelisted"
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_whitelistParticipants",
									"nameLocation": "4151:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "4182:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "4174:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "participants_",
												"nameLocation": "4211:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "4194:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 83,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4194:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 84,
													"nodeType": "ArrayTypeName",
													"src": "4194:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4173:52:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4235:0:0"
									},
									"scope": 128,
									"src": "4142:306:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "4456:722:0",
										"text": "@dev Whitelists an array of addresses to be eligible for participation in a closed (whitelisted) auction\n @notice Whitelists a group of users to be eligible for participation in a closed (whitelisted) auction\n @param auctionID_ The 256 bit hash identifier of the auction\n @param participants_ The array of addresses to be whitelisted\n @return Returns true if the whitelisting of the passed addresses was successful\n @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\n @custom:virtual The storage modification should be done by the internal function '_whitelistParticipants'"
									},
									"functionSelector": "553138d4",
									"id": 127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "whitelistParticipants",
									"nameLocation": "5193:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "5223:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "5215:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "participants_",
												"nameLocation": "5252:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "5235:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 120,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5235:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 121,
													"nodeType": "ArrayTypeName",
													"src": "5235:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5214:52:0"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "5293:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5293:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:6:0"
									},
									"scope": 128,
									"src": "5184:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 129,
							"src": "348:4954:0",
							"usedErrors": [],
							"usedEvents": [
								19,
								24
							]
						}
					],
					"src": "33:5269:0"
				},
				"id": 0
			}
		}
	}
}