{
	"id": "fa2ed79f9da6836e5d575442dc7c50e7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"CancellableAuctionController.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0;\r\n\r\n/// @title Cancellable auction controller contract\r\n/// @author Ruben Frisch (Óbuda University - John von Neumann Faculty of Informatics, Business Informatics MSc)\r\n/// @notice This contract enables cancellable auctions\r\n/// @dev This contract enables cancellable auctions\r\nabstract contract CancellableAuctionController {\r\n\r\n     // <<< STATE VARIABLES >>>\r\n    /// @dev Indicates whether an auction is cancellable or not\r\n    mapping(bytes32 => bool) private _cancelSwitch;\r\n\r\n    /// @dev Indicates whether a cancellable auction was cancalled or not\r\n    mapping(bytes32 => bool) private _cancelled;\r\n\r\n     // <<< EVENTS >>>\r\n    /// @dev Event for logging when an auction has been configured as cancellable\r\n    /// @notice Event for logging when an auction has been configured as cancellable\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    event AuctionConfiguredAsCancellable(bytes32 indexed auctionID_);\r\n\r\n    /// @dev Event for logging when an auction has been cancelled\r\n    /// @notice Event for logging when an auction has been cancelled\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    event AuctionCancelled(bytes32 indexed auctionID_);\r\n\r\n     // <<< MODIFIERS >>>\r\n    /// @dev This modifier absorbs the associated function's body when an auction is not cancelled, otherwise it reverts execution\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    modifier whenNotCancelled(bytes32 auctionID_) {\r\n        require(!isCancelled(auctionID_), \"Auction is cancelled!\");\r\n        _;\r\n    }\r\n\r\n     // <<< READ FUNCTIONS >>>\r\n    /// @dev Retrieves whether a specific auction is cancellable (true) or not cancellable (false)\r\n    /// @notice Retrieves whether a specific auction is cancellable (true) or not cancellable (false)\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @return Returns a boolean flag indicating whether an auction is cancellable (true) or not cancellable (false)\r\n    function isCancellable(bytes32 auctionID_) public view returns (bool) {\r\n        return _cancelSwitch[auctionID_];\r\n    }\r\n\r\n    /// @dev Retrieves whether a specific cancellable auction is cancelled (true) or not cancelled (false)\r\n    /// @notice Retrieves whether a specific cancellable auction is cancelled (true) or not cancelled (false)\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @return Returns a boolean flag indicating whether a cancellable auction is cancelled (true) or not cancelled (false)\r\n    function isCancelled(bytes32 auctionID_) public view returns (bool) {\r\n        return _cancelled[auctionID_];\r\n    }\r\n\r\n     // <<< CORE CANCELLABLE AUCTION CONTROLLER FUNCTIONS >>>\r\n    /// @dev Configures an auction as cancellable\r\n    /// @notice Configures an auction as cancellable\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    function _configureAsCancellableAuction(bytes32 auctionID_) internal {\r\n        _cancelSwitch[auctionID_] = true;\r\n        emit AuctionConfiguredAsCancellable(auctionID_);\r\n    }\r\n\r\n    /// @dev Configures an auction as cancellable\r\n    /// @notice Configures an auction as cancellable\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @return Returns a true boolean literal if the configuration of an auction as cancellable was successful\r\n    /// @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\r\n    /// @custom:virtual The storage modification should be executed by the internal function '_configureAsCancellableAuction'\r\n    function configureAsCancellableAuction(bytes32 auctionID_) external virtual returns (bool);\r\n\r\n    /// @dev Cancels a cancellable auction\r\n    /// @notice Cancels a cancellable auction\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    function _cancelAuction(bytes32 auctionID_) internal {\r\n        _cancelled[auctionID_] = true;\r\n        emit AuctionCancelled(auctionID_);\r\n    }\r\n\r\n    /// @dev Cancels a cancellable auction\r\n    /// @notice Cancels a cancellable auction\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @return Returns a true boolean literal if the auction was cancelled successfully\r\n    /// @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\r\n    /// @custom:virtual The storage modification should be executed by the internal function '_cancelAuction'\r\n    function cancelAuction(bytes32 auctionID_) external virtual returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"CancellableAuctionController.sol": {
				"CancellableAuctionController": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								}
							],
							"name": "AuctionCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								}
							],
							"name": "AuctionConfiguredAsCancellable",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								}
							],
							"name": "cancelAuction",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								}
							],
							"name": "configureAsCancellableAuction",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								}
							],
							"name": "isCancellable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								}
							],
							"name": "isCancelled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Ruben Frisch (Óbuda University - John von Neumann Faculty of Informatics, Business Informatics MSc)",
						"details": "This contract enables cancellable auctions",
						"events": {
							"AuctionCancelled(bytes32)": {
								"details": "Event for logging when an auction has been cancelled",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction"
								}
							},
							"AuctionConfiguredAsCancellable(bytes32)": {
								"details": "Event for logging when an auction has been configured as cancellable",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"cancelAuction(bytes32)": {
								"custom:virtual": "This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be executed by the internal function '_cancelAuction'",
								"details": "Cancels a cancellable auction",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction"
								},
								"returns": {
									"_0": "Returns a true boolean literal if the auction was cancelled successfully"
								}
							},
							"configureAsCancellableAuction(bytes32)": {
								"custom:virtual": "This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be executed by the internal function '_configureAsCancellableAuction'",
								"details": "Configures an auction as cancellable",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction"
								},
								"returns": {
									"_0": "Returns a true boolean literal if the configuration of an auction as cancellable was successful"
								}
							},
							"isCancellable(bytes32)": {
								"details": "Retrieves whether a specific auction is cancellable (true) or not cancellable (false)",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction"
								},
								"returns": {
									"_0": "Returns a boolean flag indicating whether an auction is cancellable (true) or not cancellable (false)"
								}
							},
							"isCancelled(bytes32)": {
								"details": "Retrieves whether a specific cancellable auction is cancelled (true) or not cancelled (false)",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction"
								},
								"returns": {
									"_0": "Returns a boolean flag indicating whether a cancellable auction is cancelled (true) or not cancelled (false)"
								}
							}
						},
						"stateVariables": {
							"_cancelSwitch": {
								"details": "Indicates whether an auction is cancellable or not"
							},
							"_cancelled": {
								"details": "Indicates whether a cancellable auction was cancalled or not"
							}
						},
						"title": "Cancellable auction controller contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"cancelAuction(bytes32)": "3ef4d130",
							"configureAsCancellableAuction(bytes32)": "d3f0b50e",
							"isCancellable(bytes32)": "958476d0",
							"isCancelled(bytes32)": "9a5d4407"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"}],\"name\":\"AuctionCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"}],\"name\":\"AuctionConfiguredAsCancellable\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"}],\"name\":\"cancelAuction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"}],\"name\":\"configureAsCancellableAuction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"}],\"name\":\"isCancellable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"}],\"name\":\"isCancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Ruben Frisch (\\u00d3buda University - John von Neumann Faculty of Informatics, Business Informatics MSc)\",\"details\":\"This contract enables cancellable auctions\",\"events\":{\"AuctionCancelled(bytes32)\":{\"details\":\"Event for logging when an auction has been cancelled\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\"}},\"AuctionConfiguredAsCancellable(bytes32)\":{\"details\":\"Event for logging when an auction has been configured as cancellable\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\"}}},\"kind\":\"dev\",\"methods\":{\"cancelAuction(bytes32)\":{\"custom:virtual\":\"This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be executed by the internal function '_cancelAuction'\",\"details\":\"Cancels a cancellable auction\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\"},\"returns\":{\"_0\":\"Returns a true boolean literal if the auction was cancelled successfully\"}},\"configureAsCancellableAuction(bytes32)\":{\"custom:virtual\":\"This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be executed by the internal function '_configureAsCancellableAuction'\",\"details\":\"Configures an auction as cancellable\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\"},\"returns\":{\"_0\":\"Returns a true boolean literal if the configuration of an auction as cancellable was successful\"}},\"isCancellable(bytes32)\":{\"details\":\"Retrieves whether a specific auction is cancellable (true) or not cancellable (false)\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\"},\"returns\":{\"_0\":\"Returns a boolean flag indicating whether an auction is cancellable (true) or not cancellable (false)\"}},\"isCancelled(bytes32)\":{\"details\":\"Retrieves whether a specific cancellable auction is cancelled (true) or not cancelled (false)\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\"},\"returns\":{\"_0\":\"Returns a boolean flag indicating whether a cancellable auction is cancelled (true) or not cancelled (false)\"}}},\"stateVariables\":{\"_cancelSwitch\":{\"details\":\"Indicates whether an auction is cancellable or not\"},\"_cancelled\":{\"details\":\"Indicates whether a cancellable auction was cancalled or not\"}},\"title\":\"Cancellable auction controller contract\",\"version\":1},\"userdoc\":{\"events\":{\"AuctionCancelled(bytes32)\":{\"notice\":\"Event for logging when an auction has been cancelled\"},\"AuctionConfiguredAsCancellable(bytes32)\":{\"notice\":\"Event for logging when an auction has been configured as cancellable\"}},\"kind\":\"user\",\"methods\":{\"cancelAuction(bytes32)\":{\"notice\":\"Cancels a cancellable auction\"},\"configureAsCancellableAuction(bytes32)\":{\"notice\":\"Configures an auction as cancellable\"},\"isCancellable(bytes32)\":{\"notice\":\"Retrieves whether a specific auction is cancellable (true) or not cancellable (false)\"},\"isCancelled(bytes32)\":{\"notice\":\"Retrieves whether a specific cancellable auction is cancelled (true) or not cancelled (false)\"}},\"notice\":\"This contract enables cancellable auctions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"CancellableAuctionController.sol\":\"CancellableAuctionController\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CancellableAuctionController.sol\":{\"keccak256\":\"0x1b9bd661d007fa009b2294247bb5be633311a905527269d7e926b31bc9108829\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c116f1a0f5f47fba130369cad665bc73ad9147ef5c5ffa6c8737ed7ee2a82d1d\",\"dweb:/ipfs/QmS7dFEYZEsKLqwYVr4J8squkQi5MXhtTVae16hZaRkvHt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "CancellableAuctionController.sol:CancellableAuctionController",
								"label": "_cancelSwitch",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_bool)"
							},
							{
								"astId": 12,
								"contract": "CancellableAuctionController.sol:CancellableAuctionController",
								"label": "_cancelled",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"events": {
							"AuctionCancelled(bytes32)": {
								"notice": "Event for logging when an auction has been cancelled"
							},
							"AuctionConfiguredAsCancellable(bytes32)": {
								"notice": "Event for logging when an auction has been configured as cancellable"
							}
						},
						"kind": "user",
						"methods": {
							"cancelAuction(bytes32)": {
								"notice": "Cancels a cancellable auction"
							},
							"configureAsCancellableAuction(bytes32)": {
								"notice": "Configures an auction as cancellable"
							},
							"isCancellable(bytes32)": {
								"notice": "Retrieves whether a specific auction is cancellable (true) or not cancellable (false)"
							},
							"isCancelled(bytes32)": {
								"notice": "Retrieves whether a specific cancellable auction is cancelled (true) or not cancelled (false)"
							}
						},
						"notice": "This contract enables cancellable auctions",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"CancellableAuctionController.sol": {
				"ast": {
					"absolutePath": "CancellableAuctionController.sol",
					"exportedSymbols": {
						"CancellableAuctionController": [
							114
						]
					},
					"id": 115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "CancellableAuctionController",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:275:0",
								"text": "@title Cancellable auction controller contract\n @author Ruben Frisch (Óbuda University - John von Neumann Faculty of Informatics, Business Informatics MSc)\n @notice This contract enables cancellable auctions\n @dev This contract enables cancellable auctions"
							},
							"fullyImplemented": false,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "CancellableAuctionController",
							"nameLocation": "354:28:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "425:59:0",
										"text": "@dev Indicates whether an auction is cancellable or not"
									},
									"id": 7,
									"mutability": "mutable",
									"name": "_cancelSwitch",
									"nameLocation": "523:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 114,
									"src": "490:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 6,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "498:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "490:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 5,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "509:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "545:69:0",
										"text": "@dev Indicates whether a cancellable auction was cancalled or not"
									},
									"id": 12,
									"mutability": "mutable",
									"name": "_cancelled",
									"nameLocation": "653:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 114,
									"src": "620:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 11,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 9,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "628:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "620:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 10,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "639:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "696:233:0",
										"text": "@dev Event for logging when an auction has been configured as cancellable\n @notice Event for logging when an auction has been configured as cancellable\n @param auctionID_ The 256 bit hash identifier of the auction"
									},
									"eventSelector": "833e6492e73e54a5d3bb22cc90431f9c4f0e8ba9933ab71ddec925390a9bb03b",
									"id": 17,
									"name": "AuctionConfiguredAsCancellable",
									"nameLocation": "941:30:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "988:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "972:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 14,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:28:0"
									},
									"src": "935:65:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1008:201:0",
										"text": "@dev Event for logging when an auction has been cancelled\n @notice Event for logging when an auction has been cancelled\n @param auctionID_ The 256 bit hash identifier of the auction"
									},
									"eventSelector": "d88fab4b08bf76f15cf2d6e03e382acf1edd6790ab82967e406abac37db20288",
									"id": 22,
									"name": "AuctionCancelled",
									"nameLocation": "1221:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "1254:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1238:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 19,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:28:0"
									},
									"src": "1215:51:0"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1549:89:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1568:24:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 29,
																		"name": "auctionID_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "1581:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 28,
																	"name": "isCancelled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 63,
																	"src": "1569:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
																		"typeString": "function (bytes32) view returns (bool)"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1569:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41756374696f6e2069732063616e63656c6c656421",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1594:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f1f510e5cc69ff3d65c5059fc42ee417a775fddb6a712cc8ff1e0a11efc04fc",
																"typeString": "literal_string \"Auction is cancelled!\""
															},
															"value": "Auction is cancelled!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f1f510e5cc69ff3d65c5059fc42ee417a775fddb6a712cc8ff1e0a11efc04fc",
																"typeString": "literal_string \"Auction is cancelled!\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1560:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "1560:58:0"
											},
											{
												"id": 35,
												"nodeType": "PlaceholderStatement",
												"src": "1629:1:0"
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1301:196:0",
										"text": "@dev This modifier absorbs the associated function's body when an auction is not cancelled, otherwise it reverts execution\n @param auctionID_ The 256 bit hash identifier of the auction"
									},
									"id": 37,
									"name": "whenNotCancelled",
									"nameLocation": "1512:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "1537:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1529:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 24,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:20:0"
									},
									"src": "1503:135:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "2140:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 45,
														"name": "_cancelSwitch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2158:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
															"typeString": "mapping(bytes32 => bool)"
														}
													},
													"id": 47,
													"indexExpression": {
														"id": 46,
														"name": "auctionID_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "2172:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2158:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 44,
												"id": 48,
												"nodeType": "Return",
												"src": "2151:32:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1678:386:0",
										"text": "@dev Retrieves whether a specific auction is cancellable (true) or not cancellable (false)\n @notice Retrieves whether a specific auction is cancellable (true) or not cancellable (false)\n @param auctionID_ The 256 bit hash identifier of the auction\n @return Returns a boolean flag indicating whether an auction is cancellable (true) or not cancellable (false)"
									},
									"functionSelector": "958476d0",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isCancellable",
									"nameLocation": "2079:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "2101:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2093:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 39,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2092:20:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2134:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 42,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2134:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2133:6:0"
									},
									"scope": 114,
									"src": "2070:121:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2682:48:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 58,
														"name": "_cancelled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "2700:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
															"typeString": "mapping(bytes32 => bool)"
														}
													},
													"id": 60,
													"indexExpression": {
														"id": 59,
														"name": "auctionID_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "2711:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2700:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "2693:29:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2199:409:0",
										"text": "@dev Retrieves whether a specific cancellable auction is cancelled (true) or not cancelled (false)\n @notice Retrieves whether a specific cancellable auction is cancelled (true) or not cancelled (false)\n @param auctionID_ The 256 bit hash identifier of the auction\n @return Returns a boolean flag indicating whether a cancellable auction is cancelled (true) or not cancelled (false)"
									},
									"functionSelector": "9a5d4407",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isCancelled",
									"nameLocation": "2623:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "2643:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2635:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 52,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2634:20:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2676:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2676:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:6:0"
									},
									"scope": 114,
									"src": "2614:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "3045:109:0",
										"statements": [
											{
												"expression": {
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 69,
															"name": "_cancelSwitch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "3056:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 71,
														"indexExpression": {
															"id": 70,
															"name": "auctionID_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "3070:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3056:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3084:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3056:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "3056:32:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 76,
															"name": "auctionID_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "3135:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 75,
														"name": "AuctionConfiguredAsCancellable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "3104:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3104:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "EmitStatement",
												"src": "3099:47:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2801:169:0",
										"text": "@dev Configures an auction as cancellable\n @notice Configures an auction as cancellable\n @param auctionID_ The 256 bit hash identifier of the auction"
									},
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_configureAsCancellableAuction",
									"nameLocation": "2985:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "3024:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3016:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3015:20:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3045:0:0"
									},
									"scope": 114,
									"src": "2976:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3162:566:0",
										"text": "@dev Configures an auction as cancellable\n @notice Configures an auction as cancellable\n @param auctionID_ The 256 bit hash identifier of the auction\n @return Returns a true boolean literal if the configuration of an auction as cancellable was successful\n @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\n @custom:virtual The storage modification should be executed by the internal function '_configureAsCancellableAuction'"
									},
									"functionSelector": "d3f0b50e",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configureAsCancellableAuction",
									"nameLocation": "3743:29:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "3781:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3773:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3772:20:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3819:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 85,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:0"
									},
									"scope": 114,
									"src": "3734:91:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "4047:92:0",
										"statements": [
											{
												"expression": {
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 94,
															"name": "_cancelled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "4058:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 96,
														"indexExpression": {
															"id": 95,
															"name": "auctionID_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4069:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4058:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4083:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4058:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "4058:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 101,
															"name": "auctionID_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4120:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 100,
														"name": "AuctionCancelled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "4103:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "EmitStatement",
												"src": "4098:33:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "3833:155:0",
										"text": "@dev Cancels a cancellable auction\n @notice Cancels a cancellable auction\n @param auctionID_ The 256 bit hash identifier of the auction"
									},
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_cancelAuction",
									"nameLocation": "4003:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "4026:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "4018:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 90,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4017:20:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4047:0:0"
									},
									"scope": 114,
									"src": "3994:145:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "4147:513:0",
										"text": "@dev Cancels a cancellable auction\n @notice Cancels a cancellable auction\n @param auctionID_ The 256 bit hash identifier of the auction\n @return Returns a true boolean literal if the auction was cancelled successfully\n @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\n @custom:virtual The storage modification should be executed by the internal function '_cancelAuction'"
									},
									"functionSelector": "3ef4d130",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelAuction",
									"nameLocation": "4675:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "4697:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "4689:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 107,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:20:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "4735:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4735:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:6:0"
									},
									"scope": 114,
									"src": "4666:75:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 115,
							"src": "336:4408:0",
							"usedErrors": [],
							"usedEvents": [
								17,
								22
							]
						}
					],
					"src": "33:4711:0"
				},
				"id": 0
			}
		}
	}
}