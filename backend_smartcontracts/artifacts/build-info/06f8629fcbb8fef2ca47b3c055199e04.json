{
	"id": "06f8629fcbb8fef2ca47b3c055199e04",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"EntryFeeController.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0;\r\n\r\n/// @title Entry fee controller contract\r\n/// @author Ruben Frisch (Ã“buda University - John von Neumann Faculty of Informatics, Business Informatics MSc)\r\n/// @notice This contract enables the configuration and management of the entry fee feature for auctions\r\n/// @dev This contract enables the configuration and management of the entry fee feature for auctions\r\nabstract contract EntryFeeController {\r\n\r\n     // <<< STATE VARIABLES >>>\r\n    /// @dev Stores the entry fee of the respective auction\r\n    mapping(bytes32 => uint256) private _entryfee;\r\n\r\n    /// @dev Indicates whether an address has paid the entry fee or not for the respective auction\r\n    mapping(bytes32 => mapping(address => bool)) private _entryFeesPaid;\r\n\r\n    /// @dev Indicates whether an address has withdrawn the entry fee or not for the respective auction\r\n    mapping(bytes32 => mapping(address => bool)) private _entryFeesWithdrawn;\r\n\r\n     // <<< EVENTS >>>\r\n    /// @dev Event for logging the configuration of the entry fee for a specific auction\r\n    /// @notice Event for logging the configuration of the entry fee for a specific auction\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction that the entry fee is being configured for\r\n    /// @param entryFeeValue_ The set entry fee amount in WEI (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)\r\n    event EntryFeeConfigured(bytes32 indexed auctionID_, uint256 entryFeeValue_);\r\n\r\n    /// @dev Event for logging the payment of entry fees\r\n    /// @notice Event for logging the payment of entry fees\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction that the entry fee is being paid to\r\n    /// @param entity_ The address that paid the entry fee by calling the 'payEntryFee' function\r\n    /// @param paidEntryFeeAmount_ The amount of the entry fee being paid in Wei (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)\r\n    event EntryFeePaid(bytes32 indexed auctionID_, address entity_, uint256 paidEntryFeeAmount_);\r\n\r\n    /// @dev Event for logging the withdrawal of entry fees\r\n    /// @notice Event for logging the withdrawal of entry fees\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction that the entry fee is being withdrawn from\r\n    /// @param entity_ The address that withdrew the entry fee by calling the 'withdrawEntryFee' function\r\n    /// @param withdrawnEntryFeeAmount_ The amount of the entry fee being withdrawn in Wei (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)\r\n    event EntryFeeWithdrawn(bytes32 indexed auctionID_, address entity_, uint256 withdrawnEntryFeeAmount_);\r\n\r\n     // <<< READ FUNCTIONS >>>\r\n    /// @dev Retrieves the entry fee set for the specific auction\r\n    /// @notice Retrieves the entry fee set for the specific auction\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @return Returns the entry fee amount for the specific auction in Wei (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)\r\n    function getEntryFee(bytes32 auctionID_) public view returns (uint256) {\r\n        return _entryfee[auctionID_];\r\n    }\r\n\r\n    /// @dev Retrieves the boolean logical value indicating whether the address has paid the entry fee or not for the specific auction\r\n    /// @notice Retrieves the boolean logical value indicating whether the address has paid the entry fee or not for the specific auction\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @param participant_ The address of the participant to be checked\r\n    /// @return Returns a boolean literal that indicates whether the address has paid the entry fee for the specific auction or not\r\n    function hasPaidEntryFee(bytes32 auctionID_, address participant_) public view returns (bool) {\r\n        return _entryFeesPaid[auctionID_][participant_];\r\n    }\r\n\r\n    /// @dev Retrieves the boolean logical value indicating whether the address has withdrawn the entry fee or not from the specific auction\r\n    /// @notice Retrieves the boolean logical value indicating whether the address has withdrawn the entry fee or not from the specific auction\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @param participant_ The address of the participant to be checked\r\n    /// @return Returns a boolean literal that indicates whether the address has withdrawn the entry fee from the specific auction or not\r\n    function hasWithdrawnEntryFee(bytes32 auctionID_, address participant_) public view returns (bool) {\r\n        return _entryFeesWithdrawn[auctionID_][participant_];\r\n    }\r\n\r\n     // <<< CORE ENTRY FEE MANAGER FUNCTIONS >>>\r\n    /// @dev Sets the entry fee for a specific auction\r\n    /// @notice Sets the entry fee for a specific auction\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @param entryFee_ The amount of the entry fee in WEI (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)\r\n    function _setEntryFee(bytes32 auctionID_, uint256 entryFee_) internal {\r\n        _entryfee[auctionID_] = entryFee_;\r\n        emit EntryFeeConfigured(auctionID_, entryFee_);\r\n    }\r\n\r\n    /// @dev Sets the entry fee for a specific auction\r\n    /// @notice Sets the entry fee for a specific auction\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @param entryFee_ The amount of the entry fee in WEI (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)\r\n    /// @return Returns true boolean literal if the entry fee has been successfully set\r\n    /// @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\r\n    /// @custom:virtual The storage modification should be done by the internal function '_setEntryFee'\r\n    function setEntryFee(bytes32 auctionID_, uint256 entryFee_) external virtual returns (bool);\r\n\r\n    /// @dev Manages the internal accounting of entry fee payments\r\n    /// @notice Manages the internal accounting of entry fee payments\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    function _payEntryFee(bytes32 auctionID_) internal {\r\n        _entryFeesPaid[auctionID_][msg.sender] = true;\r\n        emit EntryFeePaid(auctionID_, msg.sender, msg.value);\r\n    }\r\n\r\n    /// @dev Manages the internal accounting of entry fee payments\r\n    /// @notice Manages the internal accounting of entry fee payments\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @return Returns true boolean literal if the entry fee has been successfully paid\r\n    /// @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\r\n    /// @custom:virtual The storage modification should be done by the internal function '_payEntryFee'\r\n    function payEntryFee(bytes32 auctionID_) external payable virtual returns (bool);\r\n\r\n    /// @dev Manages the internal accounting of entry fee withdrawals\r\n    /// @notice Manages the internal accounting of entry fee withdrawals\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    function _withdrawEntryFee(bytes32 auctionID_) internal {\r\n        _entryFeesWithdrawn[auctionID_][msg.sender] = true;\r\n        emit EntryFeeWithdrawn(auctionID_, msg.sender, getEntryFee(auctionID_));\r\n    }\r\n\r\n    /// @dev Manages the internal accounting of entry fee withdrawals\r\n    /// @notice Manages the internal accounting of entry fee withdrawals\r\n    /// @param auctionID_ The 256 bit hash identifier of the auction\r\n    /// @return Returns true if the entry fee withdrawal was successful\r\n    /// @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\r\n    /// @custom:virtual The storage modification should be done by the internal function '_withdrawEntryFee'\r\n    function withdrawEntryFee(bytes32 auctionID_) external virtual returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"EntryFeeController.sol": {
				"EntryFeeController": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "entryFeeValue_",
									"type": "uint256"
								}
							],
							"name": "EntryFeeConfigured",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "entity_",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paidEntryFeeAmount_",
									"type": "uint256"
								}
							],
							"name": "EntryFeePaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "entity_",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawnEntryFeeAmount_",
									"type": "uint256"
								}
							],
							"name": "EntryFeeWithdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								}
							],
							"name": "getEntryFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "participant_",
									"type": "address"
								}
							],
							"name": "hasPaidEntryFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "participant_",
									"type": "address"
								}
							],
							"name": "hasWithdrawnEntryFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								}
							],
							"name": "payEntryFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "entryFee_",
									"type": "uint256"
								}
							],
							"name": "setEntryFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "auctionID_",
									"type": "bytes32"
								}
							],
							"name": "withdrawEntryFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Ruben Frisch (Ã“buda University - John von Neumann Faculty of Informatics, Business Informatics MSc)",
						"details": "This contract enables the configuration and management of the entry fee feature for auctions",
						"events": {
							"EntryFeeConfigured(bytes32,uint256)": {
								"details": "Event for logging the configuration of the entry fee for a specific auction",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction that the entry fee is being configured for",
									"entryFeeValue_": "The set entry fee amount in WEI (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)"
								}
							},
							"EntryFeePaid(bytes32,address,uint256)": {
								"details": "Event for logging the payment of entry fees",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction that the entry fee is being paid to",
									"entity_": "The address that paid the entry fee by calling the 'payEntryFee' function",
									"paidEntryFeeAmount_": "The amount of the entry fee being paid in Wei (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)"
								}
							},
							"EntryFeeWithdrawn(bytes32,address,uint256)": {
								"details": "Event for logging the withdrawal of entry fees",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction that the entry fee is being withdrawn from",
									"entity_": "The address that withdrew the entry fee by calling the 'withdrawEntryFee' function",
									"withdrawnEntryFeeAmount_": "The amount of the entry fee being withdrawn in Wei (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"getEntryFee(bytes32)": {
								"details": "Retrieves the entry fee set for the specific auction",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction"
								},
								"returns": {
									"_0": "Returns the entry fee amount for the specific auction in Wei (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)"
								}
							},
							"hasPaidEntryFee(bytes32,address)": {
								"details": "Retrieves the boolean logical value indicating whether the address has paid the entry fee or not for the specific auction",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction",
									"participant_": "The address of the participant to be checked"
								},
								"returns": {
									"_0": "Returns a boolean literal that indicates whether the address has paid the entry fee for the specific auction or not"
								}
							},
							"hasWithdrawnEntryFee(bytes32,address)": {
								"details": "Retrieves the boolean logical value indicating whether the address has withdrawn the entry fee or not from the specific auction",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction",
									"participant_": "The address of the participant to be checked"
								},
								"returns": {
									"_0": "Returns a boolean literal that indicates whether the address has withdrawn the entry fee from the specific auction or not"
								}
							},
							"payEntryFee(bytes32)": {
								"custom:virtual": "This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be done by the internal function '_payEntryFee'",
								"details": "Manages the internal accounting of entry fee payments",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction"
								},
								"returns": {
									"_0": "Returns true boolean literal if the entry fee has been successfully paid"
								}
							},
							"setEntryFee(bytes32,uint256)": {
								"custom:virtual": "This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be done by the internal function '_setEntryFee'",
								"details": "Sets the entry fee for a specific auction",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction",
									"entryFee_": "The amount of the entry fee in WEI (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)"
								},
								"returns": {
									"_0": "Returns true boolean literal if the entry fee has been successfully set"
								}
							},
							"withdrawEntryFee(bytes32)": {
								"custom:virtual": "This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be done by the internal function '_withdrawEntryFee'",
								"details": "Manages the internal accounting of entry fee withdrawals",
								"params": {
									"auctionID_": "The 256 bit hash identifier of the auction"
								},
								"returns": {
									"_0": "Returns true if the entry fee withdrawal was successful"
								}
							}
						},
						"stateVariables": {
							"_entryFeesPaid": {
								"details": "Indicates whether an address has paid the entry fee or not for the respective auction"
							},
							"_entryFeesWithdrawn": {
								"details": "Indicates whether an address has withdrawn the entry fee or not for the respective auction"
							},
							"_entryfee": {
								"details": "Stores the entry fee of the respective auction"
							}
						},
						"title": "Entry fee controller contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getEntryFee(bytes32)": "32890c16",
							"hasPaidEntryFee(bytes32,address)": "b78f0478",
							"hasWithdrawnEntryFee(bytes32,address)": "0a8874a5",
							"payEntryFee(bytes32)": "e6b65a22",
							"setEntryFee(bytes32,uint256)": "5e5e52a4",
							"withdrawEntryFee(bytes32)": "11c3f586"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entryFeeValue_\",\"type\":\"uint256\"}],\"name\":\"EntryFeeConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"entity_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidEntryFeeAmount_\",\"type\":\"uint256\"}],\"name\":\"EntryFeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"entity_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawnEntryFeeAmount_\",\"type\":\"uint256\"}],\"name\":\"EntryFeeWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"}],\"name\":\"getEntryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"participant_\",\"type\":\"address\"}],\"name\":\"hasPaidEntryFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"participant_\",\"type\":\"address\"}],\"name\":\"hasWithdrawnEntryFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"}],\"name\":\"payEntryFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"entryFee_\",\"type\":\"uint256\"}],\"name\":\"setEntryFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionID_\",\"type\":\"bytes32\"}],\"name\":\"withdrawEntryFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Ruben Frisch (\\u00d3buda University - John von Neumann Faculty of Informatics, Business Informatics MSc)\",\"details\":\"This contract enables the configuration and management of the entry fee feature for auctions\",\"events\":{\"EntryFeeConfigured(bytes32,uint256)\":{\"details\":\"Event for logging the configuration of the entry fee for a specific auction\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction that the entry fee is being configured for\",\"entryFeeValue_\":\"The set entry fee amount in WEI (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)\"}},\"EntryFeePaid(bytes32,address,uint256)\":{\"details\":\"Event for logging the payment of entry fees\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction that the entry fee is being paid to\",\"entity_\":\"The address that paid the entry fee by calling the 'payEntryFee' function\",\"paidEntryFeeAmount_\":\"The amount of the entry fee being paid in Wei (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)\"}},\"EntryFeeWithdrawn(bytes32,address,uint256)\":{\"details\":\"Event for logging the withdrawal of entry fees\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction that the entry fee is being withdrawn from\",\"entity_\":\"The address that withdrew the entry fee by calling the 'withdrawEntryFee' function\",\"withdrawnEntryFeeAmount_\":\"The amount of the entry fee being withdrawn in Wei (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)\"}}},\"kind\":\"dev\",\"methods\":{\"getEntryFee(bytes32)\":{\"details\":\"Retrieves the entry fee set for the specific auction\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\"},\"returns\":{\"_0\":\"Returns the entry fee amount for the specific auction in Wei (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)\"}},\"hasPaidEntryFee(bytes32,address)\":{\"details\":\"Retrieves the boolean logical value indicating whether the address has paid the entry fee or not for the specific auction\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\",\"participant_\":\"The address of the participant to be checked\"},\"returns\":{\"_0\":\"Returns a boolean literal that indicates whether the address has paid the entry fee for the specific auction or not\"}},\"hasWithdrawnEntryFee(bytes32,address)\":{\"details\":\"Retrieves the boolean logical value indicating whether the address has withdrawn the entry fee or not from the specific auction\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\",\"participant_\":\"The address of the participant to be checked\"},\"returns\":{\"_0\":\"Returns a boolean literal that indicates whether the address has withdrawn the entry fee from the specific auction or not\"}},\"payEntryFee(bytes32)\":{\"custom:virtual\":\"This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be done by the internal function '_payEntryFee'\",\"details\":\"Manages the internal accounting of entry fee payments\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\"},\"returns\":{\"_0\":\"Returns true boolean literal if the entry fee has been successfully paid\"}},\"setEntryFee(bytes32,uint256)\":{\"custom:virtual\":\"This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be done by the internal function '_setEntryFee'\",\"details\":\"Sets the entry fee for a specific auction\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\",\"entryFee_\":\"The amount of the entry fee in WEI (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)\"},\"returns\":{\"_0\":\"Returns true boolean literal if the entry fee has been successfully set\"}},\"withdrawEntryFee(bytes32)\":{\"custom:virtual\":\"This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be done by the internal function '_withdrawEntryFee'\",\"details\":\"Manages the internal accounting of entry fee withdrawals\",\"params\":{\"auctionID_\":\"The 256 bit hash identifier of the auction\"},\"returns\":{\"_0\":\"Returns true if the entry fee withdrawal was successful\"}}},\"stateVariables\":{\"_entryFeesPaid\":{\"details\":\"Indicates whether an address has paid the entry fee or not for the respective auction\"},\"_entryFeesWithdrawn\":{\"details\":\"Indicates whether an address has withdrawn the entry fee or not for the respective auction\"},\"_entryfee\":{\"details\":\"Stores the entry fee of the respective auction\"}},\"title\":\"Entry fee controller contract\",\"version\":1},\"userdoc\":{\"events\":{\"EntryFeeConfigured(bytes32,uint256)\":{\"notice\":\"Event for logging the configuration of the entry fee for a specific auction\"},\"EntryFeePaid(bytes32,address,uint256)\":{\"notice\":\"Event for logging the payment of entry fees\"},\"EntryFeeWithdrawn(bytes32,address,uint256)\":{\"notice\":\"Event for logging the withdrawal of entry fees\"}},\"kind\":\"user\",\"methods\":{\"getEntryFee(bytes32)\":{\"notice\":\"Retrieves the entry fee set for the specific auction\"},\"hasPaidEntryFee(bytes32,address)\":{\"notice\":\"Retrieves the boolean logical value indicating whether the address has paid the entry fee or not for the specific auction\"},\"hasWithdrawnEntryFee(bytes32,address)\":{\"notice\":\"Retrieves the boolean logical value indicating whether the address has withdrawn the entry fee or not from the specific auction\"},\"payEntryFee(bytes32)\":{\"notice\":\"Manages the internal accounting of entry fee payments\"},\"setEntryFee(bytes32,uint256)\":{\"notice\":\"Sets the entry fee for a specific auction\"},\"withdrawEntryFee(bytes32)\":{\"notice\":\"Manages the internal accounting of entry fee withdrawals\"}},\"notice\":\"This contract enables the configuration and management of the entry fee feature for auctions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"EntryFeeController.sol\":\"EntryFeeController\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"EntryFeeController.sol\":{\"keccak256\":\"0x8c35b12f797a30ffc1b7dac9342c6df2408aa6809690405921b3b1aa399b530f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d1d1eba65492b384472e1a71fd26d9a0b52280ae3c9558973149c1c936ad30c\",\"dweb:/ipfs/QmUoaGN7Mgp8PZrDhBUBmqQfEcjYzp8iRZWHBRrKAaqbdB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "EntryFeeController.sol:EntryFeeController",
								"label": "_entryfee",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_uint256)"
							},
							{
								"astId": 14,
								"contract": "EntryFeeController.sol:EntryFeeController",
								"label": "_entryFeesPaid",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 21,
								"contract": "EntryFeeController.sol:EntryFeeController",
								"label": "_entryFeesWithdrawn",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"EntryFeeConfigured(bytes32,uint256)": {
								"notice": "Event for logging the configuration of the entry fee for a specific auction"
							},
							"EntryFeePaid(bytes32,address,uint256)": {
								"notice": "Event for logging the payment of entry fees"
							},
							"EntryFeeWithdrawn(bytes32,address,uint256)": {
								"notice": "Event for logging the withdrawal of entry fees"
							}
						},
						"kind": "user",
						"methods": {
							"getEntryFee(bytes32)": {
								"notice": "Retrieves the entry fee set for the specific auction"
							},
							"hasPaidEntryFee(bytes32,address)": {
								"notice": "Retrieves the boolean logical value indicating whether the address has paid the entry fee or not for the specific auction"
							},
							"hasWithdrawnEntryFee(bytes32,address)": {
								"notice": "Retrieves the boolean logical value indicating whether the address has withdrawn the entry fee or not from the specific auction"
							},
							"payEntryFee(bytes32)": {
								"notice": "Manages the internal accounting of entry fee payments"
							},
							"setEntryFee(bytes32,uint256)": {
								"notice": "Sets the entry fee for a specific auction"
							},
							"withdrawEntryFee(bytes32)": {
								"notice": "Manages the internal accounting of entry fee withdrawals"
							}
						},
						"notice": "This contract enables the configuration and management of the entry fee feature for auctions",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"EntryFeeController.sol": {
				"ast": {
					"absolutePath": "EntryFeeController.sol",
					"exportedSymbols": {
						"EntryFeeController": [
							189
						]
					},
					"id": 190,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "EntryFeeController",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:365:0",
								"text": "@title Entry fee controller contract\n @author Ruben Frisch (Ã“buda University - John von Neumann Faculty of Informatics, Business Informatics MSc)\n @notice This contract enables the configuration and management of the entry fee feature for auctions\n @dev This contract enables the configuration and management of the entry fee feature for auctions"
							},
							"fullyImplemented": false,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "EntryFeeController",
							"nameLocation": "444:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:55:0",
										"text": "@dev Stores the entry fee of the respective auction"
									},
									"id": 7,
									"mutability": "mutable",
									"name": "_entryfee",
									"nameLocation": "602:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 189,
									"src": "566:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
										"typeString": "mapping(bytes32 => uint256)"
									},
									"typeName": {
										"id": 6,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "574:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "566:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
											"typeString": "mapping(bytes32 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 5,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "585:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "620:94:0",
										"text": "@dev Indicates whether an address has paid the entry fee or not for the respective auction"
									},
									"id": 14,
									"mutability": "mutable",
									"name": "_entryFeesPaid",
									"nameLocation": "773:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 189,
									"src": "720:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(bytes32 => mapping(address => bool))"
									},
									"typeName": {
										"id": 13,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 9,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "728:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "720:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(bytes32 => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 12,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 10,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "747:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "739:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 11,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "758:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "796:99:0",
										"text": "@dev Indicates whether an address has withdrawn the entry fee or not for the respective auction"
									},
									"id": 21,
									"mutability": "mutable",
									"name": "_entryFeesWithdrawn",
									"nameLocation": "954:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 189,
									"src": "901:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(bytes32 => mapping(address => bool))"
									},
									"typeName": {
										"id": 20,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 16,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "909:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "901:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(bytes32 => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 19,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "928:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "920:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 18,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "939:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1006:407:0",
										"text": "@dev Event for logging the configuration of the entry fee for a specific auction\n @notice Event for logging the configuration of the entry fee for a specific auction\n @param auctionID_ The 256 bit hash identifier of the auction that the entry fee is being configured for\n @param entryFeeValue_ The set entry fee amount in WEI (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)"
									},
									"eventSelector": "add1018e53e580702f301f34d7a13c0df5367943d68ffe5d49389792dce47ad3",
									"id": 28,
									"name": "EntryFeeConfigured",
									"nameLocation": "1425:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"indexed": true,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "1460:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1444:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 23,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": false,
												"mutability": "mutable",
												"name": "entryFeeValue_",
												"nameLocation": "1480:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1472:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1443:52:0"
									},
									"src": "1419:77:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1504:453:0",
										"text": "@dev Event for logging the payment of entry fees\n @notice Event for logging the payment of entry fees\n @param auctionID_ The 256 bit hash identifier of the auction that the entry fee is being paid to\n @param entity_ The address that paid the entry fee by calling the 'payEntryFee' function\n @param paidEntryFeeAmount_ The amount of the entry fee being paid in Wei (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)"
									},
									"eventSelector": "cd2088ffeb057e96f56fe608a2f8588c7c8dddddd6a60000d39f7b3b2527246b",
									"id": 37,
									"name": "EntryFeePaid",
									"nameLocation": "1969:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "1998:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1982:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "entity_",
												"nameLocation": "2018:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "2010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "paidEntryFeeAmount_",
												"nameLocation": "2035:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "2027:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1981:74:0"
									},
									"src": "1963:93:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "2064:485:0",
										"text": "@dev Event for logging the withdrawal of entry fees\n @notice Event for logging the withdrawal of entry fees\n @param auctionID_ The 256 bit hash identifier of the auction that the entry fee is being withdrawn from\n @param entity_ The address that withdrew the entry fee by calling the 'withdrawEntryFee' function\n @param withdrawnEntryFeeAmount_ The amount of the entry fee being withdrawn in Wei (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)"
									},
									"eventSelector": "dd34237c6d19f446f8f5f7eb3fa5fc9a63399fb90fe93435e85812a1ada82594",
									"id": 46,
									"name": "EntryFeeWithdrawn",
									"nameLocation": "2561:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "2595:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2579:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 39,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": false,
												"mutability": "mutable",
												"name": "entity_",
												"nameLocation": "2615:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2607:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawnEntryFeeAmount_",
												"nameLocation": "2632:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2624:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2578:79:0"
									},
									"src": "2555:103:0"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "3108:47:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 54,
														"name": "_entryfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "3126:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 56,
													"indexExpression": {
														"id": 55,
														"name": "auctionID_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "3136:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3126:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 53,
												"id": 57,
												"nodeType": "Return",
												"src": "3119:28:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2698:333:0",
										"text": "@dev Retrieves the entry fee set for the specific auction\n @notice Retrieves the entry fee set for the specific auction\n @param auctionID_ The 256 bit hash identifier of the auction\n @return Returns the entry fee amount for the specific auction in Wei (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)"
									},
									"functionSelector": "32890c16",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEntryFee",
									"nameLocation": "3046:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "3066:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "3058:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:20:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "3099:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3098:9:0"
									},
									"scope": 189,
									"src": "3037:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "3809:66:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 69,
															"name": "_entryFeesPaid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "3827:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(bytes32 => mapping(address => bool))"
															}
														},
														"id": 71,
														"indexExpression": {
															"id": 70,
															"name": "auctionID_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "3842:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3827:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 73,
													"indexExpression": {
														"id": 72,
														"name": "participant_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "3854:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3827:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 68,
												"id": 74,
												"nodeType": "Return",
												"src": "3820:47:0"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "3163:546:0",
										"text": "@dev Retrieves the boolean logical value indicating whether the address has paid the entry fee or not for the specific auction\n @notice Retrieves the boolean logical value indicating whether the address has paid the entry fee or not for the specific auction\n @param auctionID_ The 256 bit hash identifier of the auction\n @param participant_ The address of the participant to be checked\n @return Returns a boolean literal that indicates whether the address has paid the entry fee for the specific auction or not"
									},
									"functionSelector": "b78f0478",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasPaidEntryFee",
									"nameLocation": "3724:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "3748:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3740:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 61,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "participant_",
												"nameLocation": "3768:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3760:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:42:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3803:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3803:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3802:6:0"
									},
									"scope": 189,
									"src": "3715:160:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "4552:71:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 86,
															"name": "_entryFeesWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4570:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(bytes32 => mapping(address => bool))"
															}
														},
														"id": 88,
														"indexExpression": {
															"id": 87,
															"name": "auctionID_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "4590:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4570:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 90,
													"indexExpression": {
														"id": 89,
														"name": "participant_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "4602:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4570:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 85,
												"id": 91,
												"nodeType": "Return",
												"src": "4563:52:0"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "3883:564:0",
										"text": "@dev Retrieves the boolean logical value indicating whether the address has withdrawn the entry fee or not from the specific auction\n @notice Retrieves the boolean logical value indicating whether the address has withdrawn the entry fee or not from the specific auction\n @param auctionID_ The 256 bit hash identifier of the auction\n @param participant_ The address of the participant to be checked\n @return Returns a boolean literal that indicates whether the address has withdrawn the entry fee from the specific auction or not"
									},
									"functionSelector": "0a8874a5",
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasWithdrawnEntryFee",
									"nameLocation": "4462:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "4491:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "4483:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 78,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "participant_",
												"nameLocation": "4511:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "4503:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4482:42:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "4546:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 83,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4546:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4545:6:0"
									},
									"scope": 189,
									"src": "4453:170:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "5051:109:0",
										"statements": [
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 101,
															"name": "_entryfee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "5062:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 103,
														"indexExpression": {
															"id": 102,
															"name": "auctionID_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "5072:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5062:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "entryFee_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "5086:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5062:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "5062:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 108,
															"name": "auctionID_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "5130:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 109,
															"name": "entryFee_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "5142:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 107,
														"name": "EntryFeeConfigured",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "5111:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5111:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "EmitStatement",
												"src": "5106:46:0"
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "4681:294:0",
										"text": "@dev Sets the entry fee for a specific auction\n @notice Sets the entry fee for a specific auction\n @param auctionID_ The 256 bit hash identifier of the auction\n @param entryFee_ The amount of the entry fee in WEI (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)"
									},
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setEntryFee",
									"nameLocation": "4990:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "5011:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "5003:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "entryFee_",
												"nameLocation": "5031:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "5023:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5002:39:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5051:0:0"
									},
									"scope": 189,
									"src": "4981:179:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "5168:645:0",
										"text": "@dev Sets the entry fee for a specific auction\n @notice Sets the entry fee for a specific auction\n @param auctionID_ The 256 bit hash identifier of the auction\n @param entryFee_ The amount of the entry fee in WEI (1000000000000000000 Wei = 1 Ether = 1000000000 Gwei)\n @return Returns true boolean literal if the entry fee has been successfully set\n @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\n @custom:virtual The storage modification should be done by the internal function '_setEntryFee'"
									},
									"functionSelector": "5e5e52a4",
									"id": 123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setEntryFee",
									"nameLocation": "5828:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "5848:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5840:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 115,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "entryFee_",
												"nameLocation": "5868:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5860:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:39:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5905:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 120,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5904:6:0"
									},
									"scope": 189,
									"src": "5819:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "6179:127:0",
										"statements": [
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 129,
																"name": "_entryFeesPaid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "6190:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => bool))"
																}
															},
															"id": 133,
															"indexExpression": {
																"id": 130,
																"name": "auctionID_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "6205:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6190:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 134,
														"indexExpression": {
															"expression": {
																"id": 131,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6217:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6221:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6217:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6190:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6231:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6190:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "6190:45:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 139,
															"name": "auctionID_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "6264:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 140,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6276:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6280:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6276:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 142,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6288:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6292:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6288:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 138,
														"name": "EntryFeePaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "6251:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,uint256)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6251:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "EmitStatement",
												"src": "6246:52:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5919:203:0",
										"text": "@dev Manages the internal accounting of entry fee payments\n @notice Manages the internal accounting of entry fee payments\n @param auctionID_ The 256 bit hash identifier of the auction"
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payEntryFee",
									"nameLocation": "6137:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "6158:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6150:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 125,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6149:20:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6179:0:0"
									},
									"scope": 189,
									"src": "6128:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "6314:555:0",
										"text": "@dev Manages the internal accounting of entry fee payments\n @notice Manages the internal accounting of entry fee payments\n @param auctionID_ The 256 bit hash identifier of the auction\n @return Returns true boolean literal if the entry fee has been successfully paid\n @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\n @custom:virtual The storage modification should be done by the internal function '_payEntryFee'"
									},
									"functionSelector": "e6b65a22",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "payEntryFee",
									"nameLocation": "6884:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "6904:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "6896:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6895:20:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "6950:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6950:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6949:6:0"
									},
									"scope": 189,
									"src": "6875:81:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "7235:151:0",
										"statements": [
											{
												"expression": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 161,
																"name": "_entryFeesWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "7246:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => bool))"
																}
															},
															"id": 165,
															"indexExpression": {
																"id": 162,
																"name": "auctionID_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "7266:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7246:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 166,
														"indexExpression": {
															"expression": {
																"id": 163,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7278:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7282:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7278:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7246:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7292:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7246:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "7246:50:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 171,
															"name": "auctionID_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "7330:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 172,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7342:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7346:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7342:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 175,
																	"name": "auctionID_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "7366:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 174,
																"name": "getEntryFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "7354:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_uint256_$",
																	"typeString": "function (bytes32) view returns (uint256)"
																}
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7354:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 170,
														"name": "EntryFeeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "7312:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,uint256)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7312:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "EmitStatement",
												"src": "7307:71:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "6964:209:0",
										"text": "@dev Manages the internal accounting of entry fee withdrawals\n @notice Manages the internal accounting of entry fee withdrawals\n @param auctionID_ The 256 bit hash identifier of the auction"
									},
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawEntryFee",
									"nameLocation": "7188:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "7214:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "7206:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:20:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7235:0:0"
									},
									"scope": 189,
									"src": "7179:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "7394:549:0",
										"text": "@dev Manages the internal accounting of entry fee withdrawals\n @notice Manages the internal accounting of entry fee withdrawals\n @param auctionID_ The 256 bit hash identifier of the auction\n @return Returns true if the entry fee withdrawal was successful\n @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\n @custom:virtual The storage modification should be done by the internal function '_withdrawEntryFee'"
									},
									"functionSelector": "11c3f586",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawEntryFee",
									"nameLocation": "7958:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "auctionID_",
												"nameLocation": "7983:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "7975:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 182,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7974:20:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "8021:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8021:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8020:6:0"
									},
									"scope": 189,
									"src": "7949:78:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 190,
							"src": "426:7604:0",
							"usedErrors": [],
							"usedEvents": [
								28,
								37,
								46
							]
						}
					],
					"src": "33:7997:0"
				},
				"id": 0
			}
		}
	}
}