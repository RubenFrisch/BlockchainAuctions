{
	"id": "2542e3b06417342717a39dc7ef293df3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"TimelockGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0;\r\n\r\n/// @title Timelock guard contract\r\n/// @author Ruben Frisch (Óbuda University - John von Neumann Faculty of Informatics, Business Informatics MSc)\r\n/// @notice This contract enables the timelock guard feature to enhance the security of critial operations\r\n/// @dev This contract enables the timelock guard feature to enhance the security of critical operations\r\nabstract contract TimelockGuard {\r\n\r\n     // <<< STATE VARIABLES >>>\r\n    /// @dev Constant that stores the time duration of the timelock delay (can be changed, no side-effects) (default: 10 days)\r\n    uint256 private constant _DELAY = 10 days;\r\n\r\n    /// @dev Constant that stores the time duration of the grace period (can be changed, no side-effects) (default: 1 days)\r\n    uint256 private constant _GRACE_PERIOD = 1 days;\r\n\r\n    /// @dev Stores the timestamp of the queue that has been initiated\r\n    uint256 private _queueTime;\r\n\r\n     // <<< EVENTS >>>\r\n    /// @dev Event for logging when a new timelock queue was started\r\n    /// @notice Event for logging when a new timelock queue was started\r\n    event TimelockQueueStarted();\r\n\r\n    /// @dev Event for logging when the timelock queue was reset\r\n    /// @notice Event for logging when the timelock queue was reset\r\n    event TimeLockQueueReset();\r\n\r\n     // <<< MODIFIERS >>>\r\n    /// @dev This modifier absorbs the associated function's body when all of the timelock guard requirements are met, otherwise it reverts execution\r\n    /// @notice This modifier absorbs the associated function's body when all of the timelock guard requirements are met, otherwise it reverts execution\r\n    /// @param blockTimestampAtCall_ The timestamp when the function call was made\r\n    /// @custom:requirement-body A queue must be started before a timelock guarded function can be executed\r\n    /// @custom:requirement-body The timestamp at the call must be greater or equal than the queue time + delay\r\n    /// @custom:requirement-body The timestamp at the call must be less or equal than the queue time + delay + grace period\r\n    modifier timelocked(uint256 blockTimestampAtCall_) {\r\n        require(getQueueTime() > 0, \"Queue not initiated!\");\r\n        require(blockTimestampAtCall_ >= (getQueueTime() + _DELAY), \"Timelocked, wait!\");\r\n        require(blockTimestampAtCall_ <= (getQueueTime() + _DELAY + _GRACE_PERIOD), \"Grade period expired!\");\r\n        _;\r\n        _resetQueue();\r\n    }\r\n\r\n     // <<< READ FUNCTIONS >>>\r\n    /// @dev Retrieves the queue timestamp\r\n    /// @notice Retrieves the queue timestamp\r\n    /// @return Returns the queue timestamp in epoch seconds\r\n    function getQueueTime() public view returns (uint256) {\r\n        return _queueTime;\r\n    }\r\n\r\n     // <<< TIMELOCK GUARD CORE FUNCTIONS >>>\r\n    /// @dev Resets the current timelock countdown queue\r\n    /// @notice Resets the current timelock countdown queue\r\n    function _resetQueue() internal {\r\n        delete _queueTime;\r\n        emit TimeLockQueueReset();\r\n    }\r\n\r\n    /// @dev Starts a new timelock countdown queue\r\n    /// @notice Starts a new timelock countdown queue\r\n    function _startQueue() internal {\r\n        _queueTime = block.timestamp;\r\n        emit TimelockQueueStarted();\r\n    }\r\n\r\n    /// @dev Starts a new timelock countdown queue\r\n    /// @notice Starts a new timelock countdown queue\r\n    /// @return Returns true boolean flag if the queue was started successfully\r\n    /// @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\r\n    /// @custom:virtual The storage modification should be done by the internal function '_startQueue'\r\n    function startQueue() external virtual returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"TimelockGuard.sol": {
				"TimelockGuard": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "TimeLockQueueReset",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "TimelockQueueStarted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getQueueTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startQueue",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Ruben Frisch (Óbuda University - John von Neumann Faculty of Informatics, Business Informatics MSc)",
						"details": "This contract enables the timelock guard feature to enhance the security of critical operations",
						"events": {
							"TimeLockQueueReset()": {
								"details": "Event for logging when the timelock queue was reset"
							},
							"TimelockQueueStarted()": {
								"details": "Event for logging when a new timelock queue was started"
							}
						},
						"kind": "dev",
						"methods": {
							"getQueueTime()": {
								"details": "Retrieves the queue timestamp",
								"returns": {
									"_0": "Returns the queue timestamp in epoch seconds"
								}
							},
							"startQueue()": {
								"custom:virtual": "This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be done by the internal function '_startQueue'",
								"details": "Starts a new timelock countdown queue",
								"returns": {
									"_0": "Returns true boolean flag if the queue was started successfully"
								}
							}
						},
						"stateVariables": {
							"_DELAY": {
								"details": "Constant that stores the time duration of the timelock delay (can be changed, no side-effects) (default: 10 days)"
							},
							"_GRACE_PERIOD": {
								"details": "Constant that stores the time duration of the grace period (can be changed, no side-effects) (default: 1 days)"
							},
							"_queueTime": {
								"details": "Stores the timestamp of the queue that has been initiated"
							}
						},
						"title": "Timelock guard contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getQueueTime()": "652a60ed",
							"startQueue()": "4698b5e2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"TimeLockQueueReset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TimelockQueueStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getQueueTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startQueue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Ruben Frisch (\\u00d3buda University - John von Neumann Faculty of Informatics, Business Informatics MSc)\",\"details\":\"This contract enables the timelock guard feature to enhance the security of critical operations\",\"events\":{\"TimeLockQueueReset()\":{\"details\":\"Event for logging when the timelock queue was reset\"},\"TimelockQueueStarted()\":{\"details\":\"Event for logging when a new timelock queue was started\"}},\"kind\":\"dev\",\"methods\":{\"getQueueTime()\":{\"details\":\"Retrieves the queue timestamp\",\"returns\":{\"_0\":\"Returns the queue timestamp in epoch seconds\"}},\"startQueue()\":{\"custom:virtual\":\"This function should be overriden in the child contract, with access control, execution preconditions, and other checks implementedThe storage modification should be done by the internal function '_startQueue'\",\"details\":\"Starts a new timelock countdown queue\",\"returns\":{\"_0\":\"Returns true boolean flag if the queue was started successfully\"}}},\"stateVariables\":{\"_DELAY\":{\"details\":\"Constant that stores the time duration of the timelock delay (can be changed, no side-effects) (default: 10 days)\"},\"_GRACE_PERIOD\":{\"details\":\"Constant that stores the time duration of the grace period (can be changed, no side-effects) (default: 1 days)\"},\"_queueTime\":{\"details\":\"Stores the timestamp of the queue that has been initiated\"}},\"title\":\"Timelock guard contract\",\"version\":1},\"userdoc\":{\"events\":{\"TimeLockQueueReset()\":{\"notice\":\"Event for logging when the timelock queue was reset\"},\"TimelockQueueStarted()\":{\"notice\":\"Event for logging when a new timelock queue was started\"}},\"kind\":\"user\",\"methods\":{\"getQueueTime()\":{\"notice\":\"Retrieves the queue timestamp\"},\"startQueue()\":{\"notice\":\"Starts a new timelock countdown queue\"}},\"notice\":\"This contract enables the timelock guard feature to enhance the security of critial operations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"TimelockGuard.sol\":\"TimelockGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TimelockGuard.sol\":{\"keccak256\":\"0xb5778c5f92de1db539d47c012fd1a443e9fbdfcab88c5a1cd9de96edb8fb1dba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cdbde0fa19fb915ba4f569cbb4fb723a12fa37c9707949ab89171e06aedb188\",\"dweb:/ipfs/QmcPrbEGzB9TvgoXrn618c6f9WURVCCU1BTnwGWKduyeaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "TimelockGuard.sol:TimelockGuard",
								"label": "_queueTime",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TimeLockQueueReset()": {
								"notice": "Event for logging when the timelock queue was reset"
							},
							"TimelockQueueStarted()": {
								"notice": "Event for logging when a new timelock queue was started"
							}
						},
						"kind": "user",
						"methods": {
							"getQueueTime()": {
								"notice": "Retrieves the queue timestamp"
							},
							"startQueue()": {
								"notice": "Starts a new timelock countdown queue"
							}
						},
						"notice": "This contract enables the timelock guard feature to enhance the security of critial operations",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"TimelockGuard.sol": {
				"ast": {
					"absolutePath": "TimelockGuard.sol",
					"exportedSymbols": {
						"TimelockGuard": [
							101
						]
					},
					"id": 102,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "TimelockGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:364:0",
								"text": "@title Timelock guard contract\n @author Ruben Frisch (Óbuda University - John von Neumann Faculty of Informatics, Business Informatics MSc)\n @notice This contract enables the timelock guard feature to enhance the security of critial operations\n @dev This contract enables the timelock guard feature to enhance the security of critical operations"
							},
							"fullyImplemented": false,
							"id": 101,
							"linearizedBaseContracts": [
								101
							],
							"name": "TimelockGuard",
							"nameLocation": "443:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "499:122:0",
										"text": "@dev Constant that stores the time duration of the timelock delay (can be changed, no side-effects) (default: 10 days)"
									},
									"id": 6,
									"mutability": "constant",
									"name": "_DELAY",
									"nameLocation": "652:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "627:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "627:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "661:7:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_864000_by_1",
											"typeString": "int_const 864000"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "677:119:0",
										"text": "@dev Constant that stores the time duration of the grace period (can be changed, no side-effects) (default: 1 days)"
									},
									"id": 10,
									"mutability": "constant",
									"name": "_GRACE_PERIOD",
									"nameLocation": "827:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "802:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "802:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "843:6:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "858:66:0",
										"text": "@dev Stores the timestamp of the queue that has been initiated"
									},
									"id": 13,
									"mutability": "mutable",
									"name": "_queueTime",
									"nameLocation": "946:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "930:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "930:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "989:137:0",
										"text": "@dev Event for logging when a new timelock queue was started\n @notice Event for logging when a new timelock queue was started"
									},
									"eventSelector": "43fb7dacf03276426ab20dc791b3be8cb2100531bac85d7c616e08af7bf35922",
									"id": 16,
									"name": "TimelockQueueStarted",
									"nameLocation": "1138:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1158:2:0"
									},
									"src": "1132:29:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "1169:129:0",
										"text": "@dev Event for logging when the timelock queue was reset\n @notice Event for logging when the timelock queue was reset"
									},
									"eventSelector": "adf19d4a72f18d860d362776ef575352c10e595e76cb22f26d8527acb3eeecae",
									"id": 19,
									"name": "TimeLockQueueReset",
									"nameLocation": "1310:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1328:2:0"
									},
									"src": "1304:27:0"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "2153:308:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 25,
																	"name": "getQueueTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "2172:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2172:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2189:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2172:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5175657565206e6f7420696e6974696174656421",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2192:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b431fe4127bca052599c35937824404308d42009e2083e5814488ec5354a5ef6",
																"typeString": "literal_string \"Queue not initiated!\""
															},
															"value": "Queue not initiated!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b431fe4127bca052599c35937824404308d42009e2083e5814488ec5354a5ef6",
																"typeString": "literal_string \"Queue not initiated!\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2164:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2164:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "blockTimestampAtCall_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2234:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 34,
																				"name": "getQueueTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 70,
																				"src": "2260:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 35,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2260:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 36,
																			"name": "_DELAY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6,
																			"src": "2277:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2260:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 38,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2259:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2234:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656c6f636b65642c207761697421",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2286:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_490e5290c71e2d73174eb3c79b08db73882815f374fa44516bae116608a6fe59",
																"typeString": "literal_string \"Timelocked, wait!\""
															},
															"value": "Timelocked, wait!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_490e5290c71e2d73174eb3c79b08db73882815f374fa44516bae116608a6fe59",
																"typeString": "literal_string \"Timelocked, wait!\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2226:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2226:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2226:80:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 44,
																"name": "blockTimestampAtCall_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2325:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 48,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 45,
																					"name": "getQueueTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 70,
																					"src": "2351:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 46,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2351:14:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 47,
																				"name": "_DELAY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "2368:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2351:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 49,
																			"name": "_GRACE_PERIOD",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "2377:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2351:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2350:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "477261646520706572696f64206578706972656421",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2393:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32faf950a82195aa9c3b935920b5072cca03b01a3d2375a5888940b0fde32214",
																"typeString": "literal_string \"Grade period expired!\""
															},
															"value": "Grade period expired!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32faf950a82195aa9c3b935920b5072cca03b01a3d2375a5888940b0fde32214",
																"typeString": "literal_string \"Grade period expired!\""
															}
														],
														"id": 43,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:100:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "2317:100:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "2428:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 57,
														"name": "_resetQueue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "2440:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2440:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "2440:13:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1366:730:0",
										"text": "@dev This modifier absorbs the associated function's body when all of the timelock guard requirements are met, otherwise it reverts execution\n @notice This modifier absorbs the associated function's body when all of the timelock guard requirements are met, otherwise it reverts execution\n @param blockTimestampAtCall_ The timestamp when the function call was made\n @custom:requirement-body A queue must be started before a timelock guarded function can be executed\n @custom:requirement-body The timestamp at the call must be greater or equal than the queue time + delay\n @custom:requirement-body The timestamp at the call must be less or equal than the queue time + delay + grace period"
									},
									"id": 61,
									"name": "timelocked",
									"nameLocation": "2111:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "blockTimestampAtCall_",
												"nameLocation": "2130:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2122:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2121:31:0"
									},
									"src": "2102:359:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "2708:36:0",
										"statements": [
											{
												"expression": {
													"id": 67,
													"name": "_queueTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "2726:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 66,
												"id": 68,
												"nodeType": "Return",
												"src": "2719:17:0"
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "2501:147:0",
										"text": "@dev Retrieves the queue timestamp\n @notice Retrieves the queue timestamp\n @return Returns the queue timestamp in epoch seconds"
									},
									"functionSelector": "652a60ed",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getQueueTime",
									"nameLocation": "2663:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2675:2:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2699:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:9:0"
									},
									"scope": 101,
									"src": "2654:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2950:72:0",
										"statements": [
											{
												"expression": {
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2961:17:0",
													"subExpression": {
														"id": 74,
														"name": "_queueTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2968:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "2961:17:0"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 77,
														"name": "TimeLockQueueReset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2994:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2994:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "EmitStatement",
												"src": "2989:25:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2799:113:0",
										"text": "@dev Resets the current timelock countdown queue\n @notice Resets the current timelock countdown queue"
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_resetQueue",
									"nameLocation": "2927:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2938:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2950:0:0"
									},
									"scope": 101,
									"src": "2918:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3169:85:0",
										"statements": [
											{
												"expression": {
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "_queueTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "3180:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 86,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3193:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3199:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3193:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3180:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "3180:28:0"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 90,
														"name": "TimelockQueueStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "3224:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3224:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "EmitStatement",
												"src": "3219:27:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3030:101:0",
										"text": "@dev Starts a new timelock countdown queue\n @notice Starts a new timelock countdown queue"
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startQueue",
									"nameLocation": "3146:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3157:2:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3169:0:0"
									},
									"scope": 101,
									"src": "3137:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3262:443:0",
										"text": "@dev Starts a new timelock countdown queue\n @notice Starts a new timelock countdown queue\n @return Returns true boolean flag if the queue was started successfully\n @custom:virtual This function should be overriden in the child contract, with access control, execution preconditions, and other checks implemented\n @custom:virtual The storage modification should be done by the internal function '_startQueue'"
									},
									"functionSelector": "4698b5e2",
									"id": 100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startQueue",
									"nameLocation": "3720:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "3759:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 97,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3759:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3758:6:0"
									},
									"scope": 101,
									"src": "3711:54:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 102,
							"src": "425:3343:0",
							"usedErrors": [],
							"usedEvents": [
								16,
								19
							]
						}
					],
					"src": "33:3735:0"
				},
				"id": 0
			}
		}
	}
}